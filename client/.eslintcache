[{"E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\index.js":"1","E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\app.js":"2","E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\modules\\t-cells\\t-cells.js":"3","E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\modules\\gene-expression\\gene-expression.js":"4","E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\modules\\home\\home.js":"5","E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\modules\\contact\\contact.js":"6","E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\modules\\contact\\contact.state.js":"7","E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\modules\\gene-expression\\gene-expression.state.js":"8"},{"size":361,"mtime":1611893484037,"results":"9","hashOfConfig":"10"},{"size":1821,"mtime":1611901986115,"results":"11","hashOfConfig":"10"},{"size":1091,"mtime":1611904766042,"results":"12","hashOfConfig":"10"},{"size":6921,"mtime":1611949105072,"results":"13","hashOfConfig":"10"},{"size":1589,"mtime":1611903363487,"results":"14","hashOfConfig":"10"},{"size":3086,"mtime":1611904810491,"results":"15","hashOfConfig":"10"},{"size":207,"mtime":1611893725942,"results":"16","hashOfConfig":"10"},{"size":200,"mtime":1611898578869,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"a33p89",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\index.js",[],["38","39"],"E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\app.js",[],"E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\modules\\t-cells\\t-cells.js",["40","41"],"import Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function TCells() {\r\n    return (\r\n        <Container className=\"py-4\">\r\n            <Card className=\"shadow\">\r\n                <Card.Header className=\"bg-primary text-white\">\r\n                    <Card.Title className=\"my-0\">\r\n                        T Cells\r\n                    </Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col xl={4}>\r\n                            Plot 1\r\n                        </Col>\r\n                        <Col xl={4}>\r\n                            Plot 2\r\n                        </Col>\r\n                        <Col xl={4}>\r\n                            Plot 3\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}","E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\modules\\gene-expression\\gene-expression.js",["42"],"import { useEffect } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Plot from 'react-plotly.js';\r\nimport groupBy from 'lodash/groupBy'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\nimport GeneExpressionState from './gene-expression.state';\r\n\r\n\r\nexport default function GeneExpression() {\r\n    const [state, setState] = useRecoilState(GeneExpressionState);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (!state.malignantCells.length || !state.nonmalignantCells.length) {\r\n                const malignantCells = await fetch('/api/query?table=malignant_cell').then(r => r.json());\r\n                const nonmalignantCells = await fetch('/api/query?table=nonmalignant_cell').then(r => r.json());\r\n                setState({\r\n                    ...state,\r\n                    malignantCells: getTraces(malignantCells, 'type'),\r\n                    nonmalignantCells: getTraces(nonmalignantCells, 'type'),\r\n                });\r\n            }\r\n        })();\r\n    }, [])\r\n\r\n    function getTraces({ columns, records }, groupByColumn) {\r\n        const xIndex = columns.indexOf('x');\r\n        const yIndex = columns.indexOf('y');\r\n        const groupIndex = columns.indexOf(groupByColumn);\r\n        const groups = groupBy(records, groupIndex);\r\n\r\n        return Object.entries(groups).map(([key, values]) => ({\r\n            name: key,\r\n            x: values.map(v => v[xIndex]),\r\n            y: values.map(v => v[yIndex]),\r\n            mode: 'markers',\r\n            type: 'scattergl',\r\n            hoverinfo: 'name',\r\n            marker: { size: 4, opacity: 0.7 }\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <Container className=\"py-4\">\r\n            <Card className=\"shadow\">\r\n                <Card.Header className=\"bg-primary text-white\">\r\n                    <Card.Title className=\"my-0\">\r\n                        Gene Expression\r\n                    </Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col xl={6}>\r\n                            {state.malignantCells.length > 0 &&\r\n                                <Plot\r\n                                    data={cloneDeep(state.malignantCells)}\r\n                                    layout={{\r\n                                        title: 'Malignant Cells',\r\n                                        legend: {\r\n                                            title: { text: 'Case (click to toggle)', font: { size: 14 } }\r\n                                        },\r\n                                        xaxis: {\r\n                                            title: 't-SNE 1',\r\n                                            showticklabels: false,\r\n                                            zeroline: false,\r\n                                            scaleanchor: 'y',\r\n                                        },\r\n                                        yaxis: {\r\n                                            title: 't-SNE 2',\r\n                                            showticklabels: false,\r\n                                            zeroline: false,\r\n                                            scaleanchor: 'x',\r\n                                        },\r\n                                        hovermode: 'closest',\r\n                                    }}\r\n                                    useResizeHandler\r\n                                    className=\"w-100\"\r\n                                    style={{ height: '800px' }}\r\n                                />}\r\n                        </Col>\r\n                        <Col xl={6}>\r\n                            {state.nonmalignantCells.length > 0 &&\r\n                                <Plot\r\n                                    data={cloneDeep(state.nonmalignantCells)}\r\n                                    layout={{\r\n                                        title: 'Non-malignant Cells',\r\n                                        legend: {\r\n                                            title: { text: 'Type (click to toggle)', font: { size: 14 } },\r\n                                            showticklabels: false,\r\n                                        },\r\n                                        xaxis: {\r\n                                            title: 't-SNE 1',\r\n                                            showticklabels: false,\r\n                                            zeroline: false,\r\n                                            scaleanchor: 'y',\r\n                                        },\r\n                                        yaxis: {\r\n                                            title: 't-SNE 2',\r\n                                            showticklabels: false,\r\n                                            zeroline: false,\r\n                                            scaleanchor: 'x',\r\n                                        },\r\n                                        hovermode: 'closest',\r\n                                    }}\r\n                                    useResizeHandler\r\n                                    className=\"w-100\"\r\n                                    style={{ height: '800px' }}\r\n\r\n                                />}\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n                <Card.Footer className=\"bg-white\">\r\n                    <Row>\r\n                        <Col md={2}>\r\n                            <Form.Group>\r\n                                <Form.Label>Cell Size</Form.Label>\r\n                                <Form.Control type=\"number\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Form.Group>\r\n                                <Form.Label>Gene</Form.Label>\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <Form.Control\r\n                                        placeholder=\"Gene\" />\r\n                                    <InputGroup.Append>\r\n                                        <Button variant=\"outline-secondary\">Clear</Button>\r\n                                    </InputGroup.Append>\r\n                                    <InputGroup.Append>\r\n                                        <Button variant=\"primary\">Search</Button>\r\n                                    </InputGroup.Append>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}","E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\modules\\home\\home.js",["43"],"import Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <Container className=\"py-4\">\r\n            <Card className=\"shadow\">\r\n                <Card.Header className=\"bg-primary text-white\">\r\n                    <Card.Title className=\"my-0\">\r\n                        Single-Cell Atlas in Liver Cancer (SCATLAS-LC)\r\n                </Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Row>\r\n\r\n                        <Col md={4}>\r\n                            <img src=\"images/home.png\" className=\"img-fluid\" />\r\n                        </Col>\r\n\r\n                        <Col md={8}>\r\n                            <p>\r\n                                SCATLAS-LC (Single-Cell ATLAS in Liver Cancer) is a publicly available data portal of single-cell transcriptomic profiles of tumor cell communities in hepatocellular carcinoma and intrahepatic cholangiocarcinoma\r\n                            </p>\r\n\r\n                            <p>\r\n                                SCATLAS-LC can be used to evaluate gene expression in malignant cells and various non-malignant cells in liver cancer. It can be further used to determine gene expression in different subtypes of stromal cells and immune cells.\r\n                            </p>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n\r\n    );\r\n}","E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\modules\\contact\\contact.js",[],"E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\modules\\contact\\contact.state.js",[],"E:\\Projects\\nci-webtools-ccr-scatlas-lc\\client\\src\\modules\\gene-expression\\gene-expression.state.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":5,"column":8,"nodeType":"50","messageId":"51","endLine":5,"endColumn":12},{"ruleId":"48","severity":1,"message":"52","line":6,"column":8,"nodeType":"50","messageId":"51","endLine":6,"endColumn":14},{"ruleId":"53","severity":1,"message":"54","line":31,"column":8,"nodeType":"55","endLine":31,"endColumn":10,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":19,"column":29,"nodeType":"59","endLine":19,"endColumn":80},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setState' and 'state'. Either include them or remove the dependency array.","ArrayExpression",["62"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [setState, state]",{"range":"65","text":"66"},[1307,1309],"[setState, state]"]